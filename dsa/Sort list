class Solution {
public:
ListNode* merge(ListNode*t1,ListNode*t2)
{ 
    ListNode*temp=new ListNode(0);
    ListNode*ans=temp;
    while(t1&&t2)
    {
        if(t1&&t1->val<=t2->val)
        {
            temp->next=new ListNode(t1->val);
            temp=temp->next;
            t1=t1->next;
        }
        else{
            temp->next=new ListNode(t2->val);
            temp=temp->next;
            t2=t2->next;
        }
    }
        
        while(t1)
        {
            temp->next=new ListNode(t1->val);
               temp=temp->next;
               t1=t1->next;
        }
        while(t2){
            temp->next=new ListNode(t2->val);
            temp=temp->next;
            t2=t2->next;
        }

    return ans->next;
}
    ListNode* sortList(ListNode* head) {
        if(head==nullptr||head->next==nullptr)
          return head;
      ListNode*fast=head;
      ListNode*slow=head;
      ListNode*prev=nullptr;
      while(fast&&fast->next)
      {  prev=slow;
        slow=slow->next;
        fast=fast->next->next;
      }
      prev->next=nullptr;
      ListNode*t1=sortList(head);
      ListNode*t2=sortList(slow);
  return   merge(t1,t2);
   
       
    }
};
